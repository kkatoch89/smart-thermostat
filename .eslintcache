[{"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\index.js":"1","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\App.js":"2","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\serviceWorker.js":"3","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\Layout.js":"4","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\actions\\actionTypes.js":"5","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\shared\\utility.js":"6","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\actions\\index.js":"7","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\styles\\GlobalStyles.js":"8","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\actions\\thermostatControls.js":"9","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\reducers\\thermostatControls.js":"10","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\axios-orders.js":"11","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\hooks\\useInterval.js":"12","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\LiveChart.js":"13","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\Thermostat.js":"14","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\ThermostatDial.js":"15","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\styles\\ThermostatStyles.js":"16"},{"size":1179,"mtime":1612803766984,"results":"17","hashOfConfig":"18"},{"size":228,"mtime":1612555090541,"results":"19","hashOfConfig":"18"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":515,"mtime":1612730437628,"results":"21","hashOfConfig":"18"},{"size":454,"mtime":1612560044677,"results":"22","hashOfConfig":"18"},{"size":594,"mtime":1612375312311,"results":"23","hashOfConfig":"18"},{"size":183,"mtime":1612464793253,"results":"24","hashOfConfig":"18"},{"size":1038,"mtime":1612646392949,"results":"25","hashOfConfig":"18"},{"size":2983,"mtime":1612648403150,"results":"26","hashOfConfig":"18"},{"size":2218,"mtime":1612575765182,"results":"27","hashOfConfig":"18"},{"size":155,"mtime":1612391996297,"results":"28","hashOfConfig":"18"},{"size":490,"mtime":1612803972129,"results":"29","hashOfConfig":"18"},{"size":3226,"mtime":1612646433705,"results":"30","hashOfConfig":"18"},{"size":4691,"mtime":1612804669749,"results":"31","hashOfConfig":"18"},{"size":7535,"mtime":1612648467221,"results":"32","hashOfConfig":"18"},{"size":1354,"mtime":1612643729892,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"x9m6vw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\index.js",[],["68","69"],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\App.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\serviceWorker.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\Layout.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\shared\\utility.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\actions\\index.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\styles\\GlobalStyles.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\actions\\thermostatControls.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\store\\reducers\\thermostatControls.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\axios-orders.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\hooks\\useInterval.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\LiveChart.js",["70"],"import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartStyles = styled.div`\r\n\tborder: solid 2px white;\r\n\twidth: 70%;\r\n\tpadding: 2rem 0;\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nconst LiveChart = (props) => {\r\n\tconst { temperatureReadings, targetTempLog } = props;\r\n\tconst [labelArr, setLabelArr] = useState([]);\r\n\tconst [ambientValueArr, setAmbientValueArr] = useState([]);\r\n\tconst [targetValueArr, setTargetValueArr] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Sorting live readings based on timestamp\r\n\t\tconst sortedArr = Object.keys(temperatureReadings)\r\n\t\t\t.sort()\r\n\t\t\t.map((el) => ({\r\n\t\t\t\t[el]: temperatureReadings[el],\r\n\t\t\t}));\r\n\r\n\t\tconst labels = [];\r\n\t\tconst ambValues = [];\r\n\t\tconst targValues = [];\r\n\t\tsortedArr.forEach((el, i) => {\r\n\t\t\t// 1. Create array of labels (timestamps)\r\n\t\t\tlabels.push(Object.keys(el)[0]);\r\n\t\t\t// 2. Create array of sensor values\r\n\t\t\tambValues.push(Object.values(el)[0]);\r\n\t\t\t// 3. Create array of target temp values\r\n\t\t\ttargValues.push(targetTempLog[Object.keys(el)[0]]);\r\n\t\t\t// console.log(targetTempLog[Object.keys(el)[0]]);\r\n\t\t});\r\n\r\n\t\tsetLabelArr(labels);\r\n\t\tsetAmbientValueArr(ambValues);\r\n\t\tsetTargetValueArr(targValues);\r\n\t\t// console.log(targetValueArr);\r\n\t}, [temperatureReadings]);\r\n\r\n\t// 3. Inject array of labels and values into LiveChart\r\n\tconst data = {\r\n\t\tlabels: labelArr,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Ambient Temperature',\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'rgba(123, 116, 187, 1)',\r\n\t\t\t\tborderColor: 'rgba(123, 116, 187, 1)',\r\n\t\t\t\tborderWidth: 2,\r\n\t\t\t\tdata: ambientValueArr,\r\n\t\t\t\tpointRadius: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Target Temperature',\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'rgba(224, 142, 59,1)',\r\n\t\t\t\tborderColor: 'rgba(224, 142, 59, 1)',\r\n\t\t\t\tborderWidth: 2,\r\n\t\t\t\tdata: targetValueArr,\r\n\t\t\t\tpointRadius: 0,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\treturn (\r\n\t\t<ChartStyles>\r\n\t\t\t<Line\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\ttext: 'Temperature',\r\n\t\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tscales: {\r\n\t\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t\t\tsuggestedMax: 30,\r\n\t\t\t\t\t\t\t\t\tstepSize: 5,\r\n\t\t\t\t\t\t\t\t\tcallback: function (value) {\r\n\t\t\t\t\t\t\t\t\t\treturn `${value}Â°`;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\tmaxRotation: 90,\r\n\t\t\t\t\t\t\t\t\tminRotation: 90,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(224, 142, 59,1)',\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</ChartStyles>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tthermostatState: state.thermostatControls.thermostatState,\r\n\t\tsetUserTemp: state.thermostatControls.setUserTemp,\r\n\t\tuid: state.thermostatControls.uid,\r\n\t\ttemperatureReadings: state.thermostatControls.temperatureReadings,\r\n\t\ttargetTempLog: state.thermostatControls.targetTempLog,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LiveChart);\r\n","C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\Thermostat.js",["71","72"],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\components\\ThermostatDial.js",[],"C:\\Users\\karan\\OneDrive\\Documents\\coding\\js\\tech-challenges\\smart-thermostat\\src\\styles\\ThermostatStyles.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":44,"column":5,"nodeType":"79","endLine":44,"endColumn":26,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":40,"column":5,"nodeType":"79","endLine":40,"endColumn":7,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":67,"column":5,"nodeType":"79","endLine":67,"endColumn":44,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'targetTempLog'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'onFetchLiveData' and 'targetUserTemp'. Either include them or remove the dependency array.",["88"],"React Hook useEffect has a missing dependency: 'props.temperatureReadings'. Either include it or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [targetTempLog, temperatureReadings]",{"range":"96","text":"97"},"Update the dependencies array to be: [onFetchLiveData, targetUserTemp]",{"range":"98","text":"99"},"Update the dependencies array to be: [targetUserTemp, onChangeStateAPI, uid, props.temperatureReadings]",{"range":"100","text":"101"},[1322,1343],"[targetTempLog, temperatureReadings]",[1158,1160],"[onFetchLiveData, targetUserTemp]",[2099,2138],"[targetUserTemp, onChangeStateAPI, uid, props.temperatureReadings]"]